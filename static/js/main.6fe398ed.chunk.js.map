{"version":3,"sources":["components/Header.jsx","components/CopyToClipboard.jsx","components/Body.jsx","components/App.jsx","index.js"],"names":["Heading","Search","className","type","value","this","props","search","id","onChange","handleChange","autoComplete","React","Component","CopyToClipboard","onCopy","content","copy","setState","showTooltip","handleOnTooltipClose","state","Tooltip","open","title","leaveDelay","onClose","placement","children","Body","fetchdata","fetch","then","response","json","res","getFilteredEmojiList","emoji","filter","emo","keywords","includes","data","emojiList","length","map","key","onClick","symbol","App","e","target","Header","ReactDOM","render","document","getElementById"],"mappings":"6RAEMA,G,MAAU,WACZ,OAAO,6BAAK,oDAA6B,6BAAK,0DAgBnCC,E,uKAZP,OACI,yBAAKC,UAAU,UACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,UACX,8BACI,2BAAOC,KAAK,OAAOC,MAAOC,KAAKC,MAAMC,OAAQC,GAAG,YAAYC,SAAUJ,KAAKC,MAAMI,aAAcC,aAAa,e,GAP/GC,IAAMC,W,uCCiCZC,E,kDA5Bb,aAAe,IAAD,8BACZ,gBAiBFC,OAAS,SAAAC,GACPC,IAAKD,GACL,EAAKE,SAAS,CAAEC,aAAa,KApBjB,EAuBdC,qBAAuB,WACrB,EAAKF,SAAS,CAAEC,aAAa,KAtB7B,EAAKE,MAAQ,CAAEF,aAAa,GAFhB,E,qDAKZ,OACE,gBAACG,EAAA,EAAD,CACEC,KAAMlB,KAAKgB,MAAMF,YACjBK,MAAO,uBACPC,WAAY,IACZC,QAASrB,KAAKe,qBACdO,UAAU,OAETtB,KAAKC,MAAMsB,SAAS,CAAEX,KAAMZ,KAAKU,c,GAdZH,aCiDfiB,E,kDAnDb,aAAe,IAAD,8BACZ,gBAWFC,UAAY,WACV,OAAOC,MACL,iEACAC,MAAK,SAAUC,GACf,OAAOA,EAASC,OAAOF,MAAK,SAAAG,GAAG,OAAIA,SAhBzB,EAoBdC,qBAAuB,WACrB,OAAO,EAAKf,MAAMgB,MAAMC,QACtB,SAAAC,GAAG,OACDA,EAAIC,SAASC,SAAS,EAAKnC,MAAM+B,QACjCE,EAAIf,MAAMiB,SAAS,EAAKnC,MAAM+B,WAtBlC,EAAKhB,MAAQ,CAAEgB,MAAO,IAFV,E,gEAKO,IAAD,OAClBhC,KAAKyB,YAAYE,MAAK,SAAAU,GACpB,EAAKxB,SAAS,CACZmB,MAAOK,S,+BAqBX,IAAMC,EAAYtC,KAAK+B,uBACvB,OACE,yBAAKlC,UAAU,QACb,4BACGyC,EAAUC,OAAS,EAClBD,EAAUE,KAAI,SAAAN,GAAG,OACf,kBAAC,EAAD,CAAiBO,IAAKP,EAAIf,QAAQ,gBAAGP,EAAH,EAAGA,KAAH,OAAe,4BAAQ8B,QAAS,kBAAM9B,EAAKsB,EAAIS,UAC/E,gCAAK,2BACFT,EAAIS,OADF,IACWT,EAAIf,eAOtB,8C,GA7CKZ,IAAMC,WCiBVoC,G,wDAjBX,WAAY3C,GAAQ,IAAD,8BACf,cAAMA,IAIVI,aAAe,SAACwC,GACZ,EAAKhC,SAAS,CAAEX,OAAQ2C,EAAEC,OAAO/C,SAHjC,EAAKiB,MAAQ,CAAEd,OAAQ,IAHR,E,qDASf,OACI,yBAAKL,UAAU,OACX,kBAACkD,EAAD,CAAQ1C,aAAcL,KAAKK,aAAcH,OAAQF,KAAKgB,MAAMd,SAC5D,kBAAC,EAAD,CAAM8B,MAAOhC,KAAKgB,MAAMd,c,GAbtBK,IAAMC,YCDxBwC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6fe398ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../assets/css/header.css';\r\nconst Heading = () => {\r\n    return <div><h2>The Emoji Finder App</h2><br/><h3>Click To Copy The Emoji</h3></div>\r\n}\r\nclass Search extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <Heading />\r\n                <div className=\"search\">\r\n                    <form>\r\n                        <input type=\"text\" value={this.props.search} id=\"searchbar\" onChange={this.props.handleChange} autoComplete=\"off\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Search;","import Tooltip from \"@material-ui/core/Tooltip\";\r\nimport copy from \"clipboard-copy\";\r\nimport * as React from \"react\";\r\n\r\n/**\r\n * Render prop component that wraps element in a Tooltip that shows \"Copied to clipboard!\" when the\r\n * copy function is invoked\r\n */\r\n\r\nclass CopyToClipboard extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { showTooltip: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <Tooltip\r\n        open={this.state.showTooltip}\r\n        title={\"Copied To Clipboard!\"}\r\n        leaveDelay={500}\r\n        onClose={this.handleOnTooltipClose}\r\n        placement=\"top\"\r\n      >\r\n        {this.props.children({ copy: this.onCopy })}\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  onCopy = content => {\r\n    copy(content);\r\n    this.setState({ showTooltip: true });\r\n  };\r\n\r\n  handleOnTooltipClose = () => {\r\n    this.setState({ showTooltip: false });\r\n  };\r\n}\r\n\r\nexport default CopyToClipboard;\r\n","import React from \"react\";\r\nimport \"../assets/css/body.css\";\r\n//import emoji from '../emojiList.js';\r\nimport \"whatwg-fetch\";\r\nimport CopyToClipboard from \"./CopyToClipboard\";\r\n\r\nclass Body extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { emoji: [] };\r\n    // this.fetchdata = this.fetchdata.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.fetchdata().then(data => {\r\n      this.setState({\r\n        emoji: data\r\n      });\r\n    });\r\n  }\r\n  fetchdata = () => {\r\n    return fetch(\r\n      \"https://jsonblob.com/api/0cafa9ae-8d20-11ea-91b5-97ac01ee1af0\"\r\n    ).then(function (response) {\r\n      return response.json().then(res => res);\r\n    });\r\n  }\r\n\r\n  getFilteredEmojiList = () => {\r\n    return this.state.emoji.filter(\r\n      emo =>\r\n        emo.keywords.includes(this.props.emoji) ||\r\n        emo.title.includes(this.props.emoji)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const emojiList = this.getFilteredEmojiList();\r\n    return (\r\n      <div className=\"body\">\r\n        <ol>\r\n          {emojiList.length > 0 ? (\r\n            emojiList.map(emo => (\r\n              <CopyToClipboard key={emo.title}>{({ copy }) => (<button onClick={() => copy(emo.symbol)}>\r\n                <li> <p>\r\n                  {emo.symbol} {emo.title}\r\n                </p>\r\n                </li>\r\n              </button>)}\r\n              </CopyToClipboard>\r\n            ))\r\n          ) : (\r\n              <li>No Emoji</li>\r\n            )}\r\n        </ol>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Body;\r\n","import React from 'react';\r\nimport Header from './Header.jsx';\r\nimport Body from './Body.jsx';\r\nimport '../assets/css/app.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // this.handleChange = this.handleChange.bind(this);\r\n        this.state = { search: \"\" };\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({ search: e.target.value })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header handleChange={this.handleChange} search={this.state.search} />\r\n                <Body emoji={this.state.search} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}